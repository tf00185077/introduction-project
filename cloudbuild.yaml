steps:
  # 使用 Docker Compose 构建镜像

  # 将 Docker Compose 生成的映像标记为您希望推送到的目的地
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'asia-east1-docker.pkg.dev/bionic-store-417406/introduction-project/frontend'
      - '.'

  # 推送 Docker 镜像到容器注册表
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia-east1-docker.pkg.dev/bionic-store-417406/introduction-project/frontend']



  # 在 Cloud Run 上部署服务（Nginx）

  # - name: 'gcr.io/cloud-builders/gcloud'
  #   args: [
  #       'run',
  #       'deploy',
  #       'introduction-project', # 替换为您的服务名称
  #       '--image',
  #       'asia-east1-docker.pkg.dev/bionic-store-417406/introduction-project/frontend',
  #       '--platform',
  #       'managed',
  #       '--region',
  #       'asia-east1',
  #       '--port',
  #       '3333',  # 指定端口号为80
  #       '--allow-unauthenticated' # 根据您的需求配置是否允许匿名访问
  #     ]

  - name: 'google/cloud-sdk:latest'
    entrypoint: 'sh'
    args:
    - -xe
    - -c
    - |
      gcloud deploy apply --file deploy/pipeline.yaml --region=asia-east1
      gcloud deploy apply --file deploy/prod.yaml --region=asia-east1
      gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=self-introduction-demo --region=asia-east1 --skaffold-file=skaffold.yaml
# images:
#   - asia-east1-docker.pkg.dev/bionic-store-417406/introduction-project/frontend
options:
  logging: CLOUD_LOGGING_ONLY

